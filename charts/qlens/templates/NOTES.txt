1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Values.namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "qlens.fullname" . }}-gateway)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Values.namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Values.namespace }} svc -w {{ include "qlens.fullname" . }}-gateway'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.namespace }} {{ include "qlens.fullname" . }}-gateway --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.ports.gateway }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Values.namespace }} -l "{{- include "qlens.gateway.selectorLabels" . | nindent 0 }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Values.namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Values.namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the health status of the services:
   Gateway: kubectl --namespace {{ .Values.namespace }} get pods -l app.kubernetes.io/component=gateway
   Router:  kubectl --namespace {{ .Values.namespace }} get pods -l app.kubernetes.io/component=router
   Cache:   kubectl --namespace {{ .Values.namespace }} get pods -l app.kubernetes.io/component=cache

3. View logs:
   kubectl --namespace {{ .Values.namespace }} logs -l app.kubernetes.io/name={{ include "qlens.name" . }} -f

{{- if .Values.costControls.enabled }}

4. Cost Controls are enabled with the following limits:
   - Total daily limit: ${{ .Values.costControls.dailyLimits.total }}
   - Per-tenant daily limit: ${{ .Values.costControls.dailyLimits.perTenant }}
   - Per-user daily limit: ${{ .Values.costControls.dailyLimits.perUser }}
{{- end }}

{{- if .Values.monitoring.enabled }}

5. Monitoring is enabled:
{{- if .Values.monitoring.prometheus.enabled }}
   - Prometheus metrics available at /metrics on port 8080
{{- end }}
{{- end }}

{{- if .Values.istio.enabled }}

6. Istio service mesh is enabled for advanced traffic management, security, and observability.
{{- end }}

For more information about QLens LLM Gateway Service, visit:
https://github.com/quantumlayerplatform/qlens