{
    "swagger": "2.0",
    "info": {
        "description": "QLens LLM Gateway Service - Unified API for multiple LLM providers",
        "title": "QLens Gateway API",
        "termsOfService": "https://quantumlayer.ai/terms",
        "contact": {
            "name": "QLens Support",
            "url": "https://quantumlayer.ai/support",
            "email": "support@quantumlayer.ai"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the gateway service is healthy and ready to serve requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/gateway.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the gateway service is ready to serve requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check endpoint",
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "schema": {
                            "$ref": "#/definitions/gateway.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is not ready",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/chat/completions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "TenantID": []
                    }
                ],
                "description": "Generate a chat completion using the specified model and messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "completions"
                ],
                "summary": "Create chat completion",
                "parameters": [
                    {
                        "description": "Chat completion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatCompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat completion response",
                        "schema": {
                            "$ref": "#/definitions/ChatCompletionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/completions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "TenantID": []
                    }
                ],
                "description": "Generate a text completion using the specified model (legacy endpoint)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "completions"
                ],
                "summary": "Create completion (legacy)",
                "parameters": [
                    {
                        "description": "Completion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway.CompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completion response",
                        "schema": {
                            "$ref": "#/definitions/gateway.CompletionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/embeddings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "TenantID": []
                    }
                ],
                "description": "Create vector embeddings for the given input text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "embeddings"
                ],
                "summary": "Create embeddings",
                "parameters": [
                    {
                        "description": "Embedding request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway.EmbeddingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Embedding response",
                        "schema": {
                            "$ref": "#/definitions/gateway.EmbeddingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/internal/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get internal metrics for monitoring and debugging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Get service metrics",
                "responses": {
                    "200": {
                        "description": "Service metrics",
                        "schema": {
                            "$ref": "#/definitions/MetricsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/models": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "TenantID": []
                    }
                ],
                "description": "Get a list of all available LLM models from all providers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "List available models",
                "parameters": [
                    {
                        "enum": [
                            "azure-openai",
                            "aws-bedrock"
                        ],
                        "type": "string",
                        "description": "Filter by provider",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available models",
                        "schema": {
                            "$ref": "#/definitions/gateway.ModelsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ChatCompletionRequest": {
            "type": "object",
            "required": [
                "messages",
                "model"
            ],
            "properties": {
                "frequency_penalty": {
                    "type": "number",
                    "example": 0
                },
                "max_tokens": {
                    "type": "integer",
                    "example": 100
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "model": {
                    "type": "string",
                    "example": "gpt-4"
                },
                "n": {
                    "type": "integer",
                    "example": 1
                },
                "presence_penalty": {
                    "type": "number",
                    "example": 0
                },
                "stop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stream": {
                    "type": "boolean",
                    "example": false
                },
                "temperature": {
                    "type": "number",
                    "example": 0.7
                },
                "top_p": {
                    "type": "number",
                    "example": 1
                },
                "user": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "ChatCompletionResponse": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Choice"
                    }
                },
                "created": {
                    "type": "integer",
                    "example": 1677652288
                },
                "id": {
                    "type": "string",
                    "example": "chatcmpl-123"
                },
                "model": {
                    "type": "string",
                    "example": "gpt-4"
                },
                "object": {
                    "type": "string",
                    "example": "chat.completion"
                },
                "usage": {
                    "$ref": "#/definitions/Usage"
                }
            }
        },
        "Choice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "type": "string",
                    "example": "stop"
                },
                "index": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "$ref": "#/definitions/Message"
                }
            }
        },
        "ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "invalid_json"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request"
                },
                "type": {
                    "type": "string",
                    "example": "invalid_request_error"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ErrorDetail"
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "system",
                        "user",
                        "assistant"
                    ],
                    "example": "user"
                }
            }
        },
        "MetricsResponse": {
            "type": "object",
            "properties": {
                "error_count": {
                    "type": "integer",
                    "example": 5
                },
                "request_count": {
                    "type": "integer",
                    "example": 100
                },
                "uptime": {
                    "type": "string",
                    "example": "24h30m"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "Usage": {
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer",
                    "example": 12
                },
                "prompt_tokens": {
                    "type": "integer",
                    "example": 9
                },
                "total_tokens": {
                    "type": "integer",
                    "example": 21
                }
            }
        },
        "domain.Capability": {
            "type": "string",
            "enum": [
                "completion",
                "embedding",
                "vision",
                "code",
                "function_calling"
            ],
            "x-enum-varnames": [
                "CapabilityCompletion",
                "CapabilityEmbedding",
                "CapabilityVision",
                "CapabilityCode",
                "CapabilityFunctionCalling"
            ]
        },
        "domain.Choice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "$ref": "#/definitions/domain.FinishReason"
                },
                "index": {
                    "type": "integer"
                },
                "logprobs": {},
                "message": {
                    "$ref": "#/definitions/domain.Message"
                }
            }
        },
        "domain.ContentPart": {
            "type": "object",
            "properties": {
                "image_url": {
                    "$ref": "#/definitions/domain.ImageURL"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.ContentType"
                }
            }
        },
        "domain.ContentType": {
            "type": "string",
            "enum": [
                "text",
                "image_url"
            ],
            "x-enum-varnames": [
                "ContentTypeText",
                "ContentTypeImageURL"
            ]
        },
        "domain.Embedding": {
            "type": "object",
            "properties": {
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "index": {
                    "type": "integer"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "domain.EmbeddingUsage": {
            "type": "object",
            "properties": {
                "cost_usd": {
                    "type": "number"
                },
                "prompt_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        },
        "domain.FinishReason": {
            "type": "string",
            "enum": [
                "stop",
                "length",
                "tool_calls",
                "content_filter",
                "function_call"
            ],
            "x-enum-varnames": [
                "FinishReasonStop",
                "FinishReasonLength",
                "FinishReasonToolCalls",
                "FinishReasonContentFilter",
                "FinishReasonFunctionCall"
            ]
        },
        "domain.FunctionCall": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.ImageURL": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "domain.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ContentPart"
                    }
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/domain.MessageRole"
                },
                "tool_call_id": {
                    "type": "string"
                },
                "tool_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ToolCall"
                    }
                }
            }
        },
        "domain.MessageRole": {
            "type": "string",
            "enum": [
                "system",
                "user",
                "assistant",
                "tool"
            ],
            "x-enum-varnames": [
                "MessageRoleSystem",
                "MessageRoleUser",
                "MessageRoleAssistant",
                "MessageRoleTool"
            ]
        },
        "domain.Model": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Capability"
                    }
                },
                "context_length": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pricing": {
                    "$ref": "#/definitions/domain.ModelPricing"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "status": {
                    "$ref": "#/definitions/domain.ModelStatus"
                }
            }
        },
        "domain.ModelPricing": {
            "type": "object",
            "properties": {
                "input_token_cost": {
                    "type": "number"
                },
                "output_token_cost": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "domain.ModelStatus": {
            "type": "string",
            "enum": [
                "available",
                "deprecated",
                "limited"
            ],
            "x-enum-varnames": [
                "ModelStatusAvailable",
                "ModelStatusDeprecated",
                "ModelStatusLimited"
            ]
        },
        "domain.Provider": {
            "type": "string",
            "enum": [
                "openai",
                "azure-openai",
                "anthropic",
                "aws-bedrock",
                "local",
                "auto"
            ],
            "x-enum-varnames": [
                "ProviderOpenAI",
                "ProviderAzureOpenAI",
                "ProviderAnthropic",
                "ProviderAWSBedrock",
                "ProviderLocal",
                "ProviderAuto"
            ]
        },
        "domain.ToolCall": {
            "type": "object",
            "properties": {
                "function": {
                    "$ref": "#/definitions/domain.FunctionCall"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.Usage": {
            "type": "object",
            "properties": {
                "cache_hit": {
                    "type": "boolean"
                },
                "completion_tokens": {
                    "type": "integer"
                },
                "cost_usd": {
                    "type": "number"
                },
                "prompt_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        },
        "gateway.CompletionRequest": {
            "type": "object",
            "properties": {
                "frequency_penalty": {
                    "type": "number"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Message"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "model": {
                    "type": "string"
                },
                "presence_penalty": {
                    "type": "number"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "stop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stream": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "top_p": {
                    "type": "number"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "gateway.CompletionResponse": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Choice"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "model": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "usage": {
                    "$ref": "#/definitions/domain.Usage"
                }
            }
        },
        "gateway.EmbeddingRequest": {
            "type": "object",
            "properties": {
                "dimensions": {
                    "type": "integer"
                },
                "encoding_format": {
                    "type": "string"
                },
                "input": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "model": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "gateway.EmbeddingResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Embedding"
                    }
                },
                "model": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "usage": {
                    "$ref": "#/definitions/domain.EmbeddingUsage"
                }
            }
        },
        "gateway.HealthResponse": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/gateway.ProviderHealth"
                    }
                },
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/gateway.ServiceHealth"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "gateway.ModelsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Model"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "gateway.ProviderHealth": {
            "type": "object",
            "properties": {
                "error_rate": {
                    "type": "number"
                },
                "latency_ms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "gateway.ServiceHealth": {
            "type": "object",
            "properties": {
                "latency_ms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "TenantID": {
            "description": "Tenant identifier for multi-tenancy",
            "type": "apiKey",
            "name": "X-Tenant-ID",
            "in": "header"
        }
    }
}