apiVersion: apps/v1
kind: Deployment
metadata:
  name: qlens-cache
  labels:
    app.kubernetes.io/name: qlens-cache
    app.kubernetes.io/component: cache
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: qlens-cache
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qlens-cache
        app.kubernetes.io/component: cache
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8107"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: qlens
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: qlens-cache
        image: qlens-cache
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8107
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: qlens-config
              key: ENVIRONMENT
        - name: SERVICE_NAME
          value: "qlens-cache"
        - name: PORT
          value: "8107"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: qlens-config
              key: LOG_LEVEL
        - name: CACHE_TYPE
          valueFrom:
            configMapKeyRef:
              name: qlens-config
              key: CACHE_TYPE
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: qlens-cache
  labels:
    app.kubernetes.io/name: qlens-cache
    app.kubernetes.io/component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8107"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8107
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: qlens-cache
    app.kubernetes.io/component: cache